<?xml version="1.0" encoding="UTF-8"?>
<!--
 |  Copyright 2015 Adobe Systems Incorporated
 |
 |  Licensed under the Apache License, Version 2.0 (the "License");
 |  you may not use this file except in compliance with the License.
 |  You may obtain a copy of the License at
 |
 |      http://www.apache.org/licenses/LICENSE-2.0
 |
 |  Unless required by applicable law or agreed to in writing, software
 |  distributed under the License is distributed on an "AS IS" BASIS,
 |  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 |  See the License for the specific language governing permissions and
 |  limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.hertz</groupId>
    <artifactId>hertz</artifactId>
    <name>Hertz AEM</name>
    <packaging>pom</packaging>
    <version>0.0.1-SNAPSHOT</version>
    <description>Hertz</description>
    
    <modules>
        <module>bundles</module>
        <module>ui.apps</module>
        <!--<module>ui.content</module>
        <module>it.tests</module>
        <module>it.launcher</module>-->
    </modules>

    <properties>
        <aem.host>localhost</aem.host>
        <aem.port>4502</aem.port>
        <aem.publish.host>localhost</aem.publish.host>
        <aem.publish.port>4503</aem.publish.port>
        <sling.user>admin</sling.user>
        <sling.password>admin</sling.password>
        <vault.user>admin</vault.user>
        <vault.password>admin</vault.password>
        <sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.language>java</sonar.language>
		<sonar.sourceEncoding>UTF-8</sonar.sourceEncoding>
		<jacoco.version>0.7.9</jacoco.version>
		<sonar-jacoco-listeners.version>1.4</sonar-jacoco-listeners.version>
		<jacoco.outputDir>${project.build.directory}</jacoco.outputDir>
		<sonar.java.binaries>${project.build.directory}/classes</sonar.java.binaries>
		<sonar.java.test.binaries>${project.build.directory}/test-classes</sonar.java.test.binaries>
		<sonar.junit.reportsPath>${project.build.directory}/surefire-reports</sonar.junit.reportsPath>

		<!-- Jacoco output file for UTs -->

		<jacoco.out.ut.file>jacoco.exec</jacoco.out.ut.file>

		<!-- Tells Sonar where the Jacoco coverage result file is located for Unit 
			Tests -->

		<sonar.jacoco.reportPath>${jacoco.outputDir}/${jacoco.out.ut.file}</sonar.jacoco.reportPath>

		<!-- Jacoco output file for ITs -->

		<jacoco.out.it.file>jacoco-it.exec</jacoco.out.it.file>

		<!-- Tells Sonar where the Jacoco coverage result file is located for Integration 
			Tests -->

		<sonar.jacoco.itReportPath>${jacoco.outputDir}/${jacoco.out.it.file}</sonar.jacoco.itReportPath>
    </properties>
    <build>
        <plugins>
            <!-- Maven Release Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.5.1</version>
                <configuration>
                    <scmCommentPrefix>[maven-scm] :</scmCommentPrefix>
                    <preparationGoals>clean install</preparationGoals>
                    <goals>install</goals>
                    <releaseProfiles>release</releaseProfiles>
                </configuration>
            </plugin>
            <!-- Maven Source Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.4</version>
                <inherited>true</inherited>
            </plugin>
            <!-- Maven Resources Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <!-- Maven Jar Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.5</version>
            </plugin>
			<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>2.5.3</version>
					<inherited>true</inherited>
					<!-- For Solr -->
					<configuration>
						<instructions>
							<Embed-Dependency>squeakysand-*|jsoup|json-*|commons-lang*;scope=compile|runtime</Embed-Dependency>
							<Embed-Directory>OSGI-INF/lib</Embed-Directory>
							<Embed-Transitive>true</Embed-Transitive>
						</instructions>
					</configuration>
				</plugin>
            <!-- Maven Enforcer Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>[2.2.1,)</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <message>Project must be compiled with Java 8 or higher</message>
                                    <version>1.8.0</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Maven Compiler Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <!-- Maven IntelliJ IDEA Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-idea-plugin</artifactId>
                <version>2.2.1</version>
                <configuration>
                    <jdkLevel>1.8</jdkLevel>
                    <linkModules>true</linkModules>
                    <downloadSources>true</downloadSources>
                </configuration>
            </plugin>
            <!-- Maven Eclipse Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <downloadSources>true</downloadSources>
                </configuration>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <!-- Maven Clean Plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>2.6.1</version>
                </plugin>
                <!-- Maven Resources Plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.7</version>
                </plugin>
                <!-- Maven Compiler Plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.2</version>
                    <configuration>
                        <source>1.8</source>
                        <target>1.8</target>
                    </configuration>
                </plugin>
                <!-- Apache Felix SCR Plugin -->
                <plugin>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>maven-scr-plugin</artifactId>
                    <version>1.20.0</version>
                    <executions>
                        <execution>
                            <id>generate-scr-scrdescriptor</id>
                            <goals>
                                <goal>scr</goal>
                            </goals>
                            <configuration>
                                <!-- Private service properties for all services. -->
                                <properties>
                                    <service.vendor>Adobe</service.vendor>
                                </properties>
                            </configuration>
                        </execution>
                    </executions>
                    <configuration>
                               <outputDirectory>${project.build.directory}/classes</outputDirectory>
                    </configuration>
                </plugin>
                <!-- Maven Installer Plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.2</version>
                </plugin>
                <!-- Maven Surefire Plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.18.1</version>
                </plugin>
                <!-- Maven Failsafe Plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>2.18.1</version>
                </plugin>
                <!-- Maven Deploy Plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>
                <!-- Apache Sling Plugin -->
                <plugin>
                    <groupId>org.apache.sling</groupId>
                    <artifactId>maven-sling-plugin</artifactId>
                    <version>2.1.0</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>install</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <slingUrl>http://${aem.host}:${aem.port}/crx/repository/crx.default</slingUrl>
                        <usePut>true</usePut>
                        <failOnError>true</failOnError>
                    </configuration>
                </plugin>
                <!-- Content Package Plugin -->
				<plugin>
					<groupId>com.day.jcr.vault</groupId>
					<artifactId>content-package-maven-plugin</artifactId>
					<version>0.0.24</version>
					<configuration>
						<targetURL>http://${aem.host}:${aem.port}/crx/packmgr/service.jsp</targetURL>
						<failOnError>true</failOnError>
						<failOnMissingEmbed>true</failOnMissingEmbed>
					</configuration>
				</plugin>				
                <!-- Maven Enforcer Plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>1.4</version>
                </plugin>
                <!-- Maven Dependency Plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>2.10</version>
                </plugin>
                <!-- Build Helper Maven Plugin -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>1.9.1</version>
                </plugin>
                <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-enforcer-plugin</artifactId>
                                        <versionRange>[1.0.0,)</versionRange>
                                        <goals>
                                            <goal>enforce</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>
                                            org.apache.maven.plugins
                                        </groupId>
                                        <artifactId>
                                            maven-dependency-plugin
                                        </artifactId>
                                        <versionRange>
                                            [2.2,)
                                        </versionRange>
                                        <goals>
                                            <goal>copy-dependencies</goal>
                                            <goal>unpack</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                         <ignore />
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>
                                            org.codehaus.mojo
                                        </groupId>
                                        <artifactId>
                                            build-helper-maven-plugin
                                        </artifactId>
                                        <versionRange>
                                            [1.5,)
                                        </versionRange>
                                        <goals>
                                            <goal>
                                                reserve-network-port
                                            </goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
               <plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco.version}</version>
					<executions>
						<execution>
							<id>default-prepare-agent</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<destFile>${sonar.jacoco.reportPath}</destFile>
						<excludes>
							<exclude>**/*/ui.apps/target/*</exclude>
										<exclude>**/com/hertz/digital/platform/constants/*.java</exclude>
										<exclude>**/com/hertz/digital/platform/service/api/*.java</exclude>
										<exclude>**/bundles/platform/src/test/java/com/hertz/digital/platform/use/*Test*.java</exclude>
									</excludes>
					</configuration>

				</plugin>
                <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-pmd-plugin</artifactId>
                        <version>3.2</version>
                        <configuration>
                                <linkXRef>false</linkXRef>
                                <rulesets>
                                        <ruleset>acs/pmd/rules.xml</ruleset>
                                </rulesets>
                                <targetJdk>1.8</targetJdk>
                        </configuration>
                        <dependencies>
                                <dependency>
                                        <groupId>com.adobe.acs</groupId>
                                        <artifactId>coding-standards</artifactId>
                                        <version>0.0.1</version>
                                </dependency>
                        </dependencies>
                </plugin>
                <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>findbugs-maven-plugin</artifactId>
                        <version>3.0.0</version>
                </plugin>
                <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-checkstyle-plugin</artifactId>
                        <version>2.12.1</version>
                        <configuration>
                                <linkXRef>false</linkXRef>
                                <configLocation>acs/checkstyle/checks.xml</configLocation>
                                <includeResources>false</includeResources>
                                <includeTestResources>false</includeTestResources>
                        </configuration>
                        <dependencies>
                                <dependency>
                                        <groupId>com.adobe.acs</groupId>
                                        <artifactId>checkstyle-osgi-checks</artifactId>
                                        <version>0.0.3</version>
                                </dependency>
                                <dependency>
                                        <groupId>com.adobe.acs</groupId>
                                        <artifactId>coding-standards</artifactId>
                                        <version>0.0.1</version>
                                </dependency>
                        </dependencies>
                </plugin>
                <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>2.9</version>
                        <configuration>
                                <excludePackageNames>*.impl</excludePackageNames>
                        </configuration>
                </plugin>
                <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>jslint-maven-plugin</artifactId>
                        <version>1.0.1</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

        <profiles>
        <profile>

			<id>coverage</id>

			<build>

				<plugins>

					<plugin>

						<groupId>org.apache.maven.plugins</groupId>

						<artifactId>maven-surefire-plugin</artifactId>

						<configuration>

							<argLine>${jacoco.agent.ut.arg}</argLine>

							<!-- Specific to generate mapping between tests and covered code -->

							<properties>

								<property>

									<name>listener</name>

									<value>org.sonar.java.jacoco.JUnitListener</value>

								</property>

							</properties>

							<!-- test failure ignore -->

							<testFailureIgnore>true</testFailureIgnore>

						</configuration>

					</plugin>

					<plugin>

						<groupId>org.apache.maven.plugins</groupId>

						<artifactId>maven-failsafe-plugin</artifactId>

						<configuration>

							<argLine>-Xmx1024m -XX:MaxPermSize=256m ${jacoco.agent.it.arg}

							</argLine>

							<!-- Specific to generate mapping between tests and covered code -->

							<properties>

								<property>

									<name>listener</name>

									<value>org.sonar.java.jacoco.JUnitListener</value>

								</property>

							</properties>

							<!-- Let's put failsafe reports with surefire to have access to tests 
								failures/success reports in sonar -->

							<reportsDirectory>${project.build.directory}/surefire-reports

							</reportsDirectory>

						</configuration>

					</plugin>

					<plugin>

						<groupId>org.jacoco</groupId>

						<artifactId>jacoco-maven-plugin</artifactId>

						<version>${jacoco.version}</version>

						<executions>

							<!-- Prepares a variable, jacoco.agent.ut.arg, that contains the info 
								to be passed to the JVM hosting the code being tested. -->

							<execution>

								<id>prepare-ut-agent</id>

								<phase>process-test-classes</phase>

								<goals>

									<goal>prepare-agent</goal>

								</goals>

								<configuration>

									<destFile>${sonar.jacoco.reportPath}</destFile>

									<propertyName>jacoco.agent.ut.arg</propertyName>

									<append>true</append>

									<excludes>
									<exclude>**/*/ui.apps/target/*</exclude>
										<exclude>**/com/hertz/digital/platform/constants/*.java</exclude>
										<exclude>**/com/hertz/digital/platform/service/api/*.java</exclude>
										<exclude>**/bundles/platform/src/test/java/com/hertz/digital/platform/use/*Test*.java</exclude>
									</excludes>

								</configuration>

							</execution>

							<!-- Prepares a variable, jacoco.agent.it.arg, that contains the info 
								to be passed to the JVM hosting the code being tested. -->

							<execution>

								<id>prepare-it-agent</id>

								<phase>pre-integration-test</phase>

								<goals>

									<goal>prepare-agent</goal>

								</goals>

								<configuration>

									<destFile>${sonar.jacoco.itReportPath}</destFile>

									<propertyName>jacoco.agent.it.arg</propertyName>

									<append>true</append>

								</configuration>

							</execution>

						</executions>

					</plugin>

				</plugins>

			</build>

			<dependencies>

				<dependency>

					<groupId>org.codehaus.sonar-plugins.java</groupId>

					<artifactId>sonar-jacoco-listeners</artifactId>

					<version>${sonar-jacoco-listeners.version}</version>

					<scope>test</scope>

				</dependency>

			</dependencies>

		</profile>
        <!-- ====================================================== -->
        <!-- A D O B E   P U B L I C   P R O F I L E                -->
        <!-- ====================================================== -->
        <profile>
            <id>adobe-public</id>

            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>

            <properties>
                <releaseRepository-Id>adobe-public-releases</releaseRepository-Id>
                <releaseRepository-Name>Adobe Public Releases</releaseRepository-Name>
                <releaseRepository-URL>http://repo.adobe.com/nexus/content/groups/public</releaseRepository-URL>
            </properties>

            <repositories>
                <repository>
                    <id>adobe-public-releases</id>
                    <name>Adobe Public Repository</name>
                    <url>http://repo.adobe.com/nexus/content/groups/public</url>
                    <releases>
                        <enabled>true</enabled>
                        <updatePolicy>never</updatePolicy>
                    </releases>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                </repository>
            </repositories>

            <pluginRepositories>
                <pluginRepository>
                    <id>adobe-public-releases</id>
                    <name>Adobe Public Repository</name>
                    <url>http://repo.adobe.com/nexus/content/groups/public</url>
                    <releases>
                        <enabled>true</enabled>
                        <updatePolicy>never</updatePolicy>
                    </releases>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                </pluginRepository>
            </pluginRepositories>
        </profile>
    </profiles>


    <!-- ====================================================================== -->
    <!-- D E P E N D E N C I E S                                                -->
    <!-- ====================================================================== -->
    <dependencyManagement>
        <dependencies>
           <dependency>
               <groupId>org.apache.poi</groupId>
               <artifactId>poi</artifactId>
               <version>3.17</version>
           </dependency>
		   <dependency>
           		<groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>3.17</version>
            </dependency>
            <dependency>
                <groupId>com.adobe.aem</groupId>
                <artifactId>uber-jar</artifactId>
                <version>6.2.0-SP1</version>
                <classifier>apis</classifier>
                <scope>provided</scope>
            </dependency>
            <!-- OSGi Dependencies -->
            <dependency>
                <groupId>org.apache.felix</groupId>
                <artifactId>org.apache.felix.scr</artifactId>
                <version>1.6.0</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.felix</groupId>
                <artifactId>org.apache.felix.scr.annotations</artifactId>
                <version>1.9.6</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
        <groupId>biz.aQute</groupId>
        <artifactId>bndlib</artifactId>
        <version>1.50.0</version>
        <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>org.osgi.core</artifactId>
                <version>4.2.0</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>org.osgi.compendium</artifactId>
                <version>4.2.0</version>
                <scope>provided</scope>
            </dependency>
            <!-- Logging Dependencies -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>1.7.21</version>
                <scope>provided</scope>
            </dependency>
            
            <dependency>
                <groupId>org.apache.sling</groupId>
                <artifactId>org.apache.sling.models.api</artifactId>
<!--                <version>1.0.0</version> -->
                <version>1.1.0</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.sling</groupId>
                <artifactId>org.apache.sling.models.impl</artifactId>
                <version>1.1.0</version>
                <scope>provided</scope>
            </dependency>

            <!-- Servlet API -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>servlet-api</artifactId>
                <version>2.4</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>javax.servlet.jsp</groupId>
                <artifactId>jsp-api</artifactId>
                <version>2.1</version>
                <scope>provided</scope>
            </dependency>
            <!-- JCR -->
            <dependency>
                <groupId>javax.jcr</groupId>
                <artifactId>jcr</artifactId>
                <version>2.0</version>
                <scope>provided</scope>
            </dependency>
            <!-- Taglibs -->
            <dependency>
                <groupId>com.day.cq.wcm</groupId>
                <artifactId>cq-wcm-taglib</artifactId>
                <version>5.7.4</version>
                <scope>provided</scope>
            </dependency>            
            <!-- Testing -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.8.2</version>
                <scope>test</scope>
            </dependency>
					<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>1.6.5</version>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<version>1.6.5</version>
		</dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-simple</artifactId>
                <version>1.5.11</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>1.9.5</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>junit-addons</groupId>
                <artifactId>junit-addons</artifactId>
                <version>1.4</version>
                <scope>test</scope>
            </dependency>
			<dependency>
				<groupId>com.adobe.cq.sightly</groupId>
				<artifactId>cq-wcm-sightly-extension</artifactId>
				<version>1.3.8</version>
				<scope>provided</scope>
			</dependency>
            <dependency>
                <groupId>javax</groupId>
                <artifactId>javaee-api</artifactId>
                <version>8.0</version>
                <scope>provided</scope>
            </dependency>
			<dependency>
            <groupId>org.apache.geronimo.specs</groupId>
            <artifactId>geronimo-atinject_1.0_spec</artifactId>
            <version>1.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.4</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.2</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.4</version>
            <scope>provided</scope>
        </dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-imaging</artifactId>
			<version>1.0-R1725432-B002</version>
			<scope>provided</scope>
		</dependency>	
        
		<dependency>
    		<groupId>com.google.code.gson</groupId>
    		<artifactId>gson</artifactId>
    		<version>2.8.0</version>
		</dependency>
		<dependency>
    		<groupId>com.google.guava</groupId>
    		<artifactId>guava</artifactId>
    		<version>19.0</version>
		</dependency>
		<dependency>
    		<groupId>org.jsoup</groupId>
    		<artifactId>jsoup</artifactId>
    	<version>1.10.3</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/commons-httpclient/commons-httpclient -->
		<dependency>
		    <groupId>org.apache.httpcomponents</groupId>
		    <artifactId>httpclient</artifactId>
		    <version>4.5.5</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/javax.mail/mail -->
		<dependency>
		    <groupId>javax.mail</groupId>
		    <artifactId>mail</artifactId>
		    <version>1.4</version>
		</dependency>
		<dependency>
            <!-- TODO create separate API package, this is just to get the special Sling test runner -->
            <groupId>org.apache.sling</groupId>
            <artifactId>org.apache.sling.junit.core</artifactId>
            <version>1.0.8</version>
            <scope>provided</scope>
        </dependency>
        </dependencies>
    </dependencyManagement>
    
    <repositories>
        <repository>
            <id>adobe</id>
            <name>Adobe Public Repository</name>
            <url>http://repo.adobe.com/nexus/content/groups/public/</url>
            <layout>default</layout>
        </repository>
        <repository>
            <id>citytech</id>
            <name>Citytech Repository</name>
            <url>http://nexus.citytech.ctmsp.com/content/groups/public/</url>
            <layout>default</layout>
        </repository>

    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>adobe</id>
            <name>Adobe Public Repository</name>
            <url>http://repo.adobe.com/nexus/content/groups/public/</url>
            <layout>default</layout>
        </pluginRepository>
    </pluginRepositories>

	
</project>
